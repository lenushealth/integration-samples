@using Newtonsoft.Json
@model IEnumerable<HeartRateSampleModel>

<table class="table table-striped">
    <thead>
        <tr>
            <th class="text-center">Date</th>
            <th class="text-center">Reading</th>
        </tr>
    </thead>
    <tbody>
        @if (!Model.Any())
    {
        <tr>
            <td class="text-center" colspan="2"><span class="text-muted">No data available</span></td>
        </tr>
}
        @foreach (var item in Model)
    {
        <tr>
            <td>@Html.DisplayFor(m => item.From)</td>
            <td>
                <span>@Html.DisplayFor(m => item.BeatsPerMinute)</span>
            </td>
        </tr>
}
    </tbody>
</table>
@if (Model.Any())
{
    @await Html.PartialAsync("_ChartingScripts")

    <div id="@SampleDataTypes.HeartRate" class="ct-chart ct-perfect-fifth"></div>

    <script type="text/javascript">

        var data = @Json.Serialize(new[]
                   {
                       new {name = nameof(HeartRateSampleModel.BeatsPerMinute), data = @Model.Select(d => new {x = d.From.ToString("s"), y = d.BeatsPerMinute})},
                   });

        var chart = new Chartist.Line('#@SampleDataTypes.HeartRate',
            {
                series: data
            },
            {
                axisY: {
                    onlyInteger: true,
                    offset: 10
                },
                axisX: {
                },
                showArea: false,
                showLine: false,
                showPoint: true,
                lineSmooth: Chartist.Interpolation.simple({
                    divisor: 2
                }),
                fullWidth: true,
                chartPadding: {
                    right: 20
                },
                low: 0,
                plugins: [
                ]
            });

        chart.on('draw',
            function(context) {
                if (context.type === 'point') {
                }
            });

    </script>
}